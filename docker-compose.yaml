version: "3.7"
services:
  traefik:
    image: traefik:latest
    command:
      - --log.level=DEBUG
      - --api.insecure
      - --api.dashboard
      - --providers.docker
      - --providers.docker.network=traefik-public
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=nthoa2.dev@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - { target: 80, published: 80, mode: host, protocol: tcp }
      - { target: 443, published: 443, mode: host, protocol: tcp }
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      placement:
        constraints:
          - "node.hostname == api-gateway"
  postgres:
    image: postgres:15
    labels:
      - "traefik.enable=false"
    ports:
      - 5432:5432
    deploy:
      placement:
        constraints:
          - "node.role==worker"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  hello:
    image: jung2k/hello-world:latest
    deploy:
      replicas: 2
      placement:
        constraints:
          - "node.role == worker"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.hello.rule=PathPrefix(`/hello`)"
        - "traefik.http.routers.hello.entrypoints=http"
        - "traefik.http.routers.hello.service=api@internal"
        - traefik.http.routers.hello.tls.certresolver=letsencrypt
        - "traefik.http.services.hello.loadbalancer.server.port=3000"
    environment:
      NODE_HOSTNAME: "{{.Node.Hostname}}"
volumes:
  letsencrypt:
networks:
  default:
    external: true
    name: traefik-public